mod std::number


cls BigInt {
    values: std::Vec[U32]
}

cls BigDec { }


sup std::ops::Sub[Rhs=BigInt] on BigInt {
    fun sub(self, other: BigInt) -> BigInt { }
}

sup std::ops::Add[Rhs=BigInt] on BigInt {
    fun add(self, other: BigInt) -> BigInt { }
}

sup std::ops::Mul[Rhs=BigInt] on BigInt {
    fun mul(self, other: BigInt) -> BigInt { }
}

sup std::ops::Div[Rhs=BigInt] on BigInt {
    fun div(self, other: BigInt) -> BigInt { }
}

sup std::ops::Eq[Rhs=BigInt] on BigInt {
    fun eq(&self, that: BigInt) -> Bool { }
}


cls U16 { }
cls U32 { }
cls U64 { }
