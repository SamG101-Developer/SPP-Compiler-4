mod main


cls Point {
    x: std.BigInt
    y: std.BigInt
    z: std.BigInt
}

cls Vector {
    point: Point
    angle: std.BigInt
}


cls Type[T] {
    a: T
    b: T
}


sup [T] Type[T] {
    fun func[U](&self) -> U { }
    fun g(&self, a: T) -> std.Bool { }
}

sup Type[std.Bool] {
    fun bool_func(&self) -> std.Bool { }
}


sup Point {
    fun func(&self) -> Point { }
    fun func(&self, a: std.Bool) -> std.Bool { }
}


fun a() -> std.Void { }


fun main() -> std.Void {
    let t = Type(a=1, b=2)
    let mut x = t.bool_func()
    x = 1
}