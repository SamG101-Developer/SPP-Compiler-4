mod main


cls A {
    x: std::Opt[std::BigInt]
}


sup std::IterMov[std::BigInt] on A { }

sup std::IterRef[std::BigInt] on A { }

cls C {
    a: std::BigInt
}

cls B[T] {
    x: T
}


sup [T] C on B[T] { }

sup [T] B[T] {
    fun func(&self, a: std::BigInt) -> T { }
}


fun function_test[T](a: T, b: T) -> std::Void { }

fun function_test(a: std::Bool) -> std::Void { }


fun main() -> std::Void {
    let x = false

    loop true {
        exit "123"

        let mut x = loop true {
            exit 123
        }
        x = false

        exit "false"
    }
}
